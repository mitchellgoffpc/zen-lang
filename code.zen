(def my-function (x)
    (var m {:hello "world"
            :foo "bar"})
    (var is-empty? (lambda (x) (x :length > 0)))
    (print m x)
    (is-empty? x))

(import constants.flux-cart-constants :as Flux-Cart-Constants)
(import App-Dispatcher :from dispatcher.app-dispatcher)

;; Define action methods
(class Flux-Cart-Actions
    ;; Receive initial product data
    (def (:receiveProduct data)
        (App-Dispatcher :handle-action
          { :action-type Flux-Cart-Constants.RECEIVE-DATA
            :data data }))

    ;; Set currently selected product variation
    (def (:select-product index)
        (App-Dispatcher :handle-action
          { :action-type Flux-Cart-Constants.SELECT-PRODUCT
            :data index }))

    ;; Add item to cart
    (def (:add-to-cart sku update)
        (App-Dispatcher :handle-action
          { :action-type Flux-Cart-Constants.CART-ADD
            :sku sku
            :update update }))

    ;; Remove item from cart
    (def (:remove-from-cart sku)
        (App-Dispatcher :handle-action
          { :action-type Flux-Cart-Constants.CART-REMOVE
            :sku sku }))

    ;; Update cart visibility status
    (def (:update-cart-visible visible)
        (App-Dispatcher :handle-action
          { :action-type Flux-Cart-Constants.CART-VISIBLE
            :visible visible })))
