; (5.53535 - 535f + 5005 + 5E-2)
; (print hello hello+world hello:world (print "hello world" 'hello world))
; (func x (a b c))

; (func add (x y)
;  (x + y))


; (infixr 9 '+)
; (set add (x y -> x + y))
; (set add (-> (x y) (+ (x) (y))))
; (set add (lambda (x y) (+ x y)))
; (apply 5 10 (x y -> x + y))
; (apply 5 10 ())

; (x || !y)
; (x || ! y)
; (x || (! y))

; (define fact (lambda (n)
;     (if (n <= 1)
;         1
;         (n * fact (n - 1)))))

; (fact 10)

; (define fib (lambda (n)
;     (if (n < 2)
;         1
;         (fib (n - 1) + fib (n - 2)))))

; (fib 5)

; (func test:Int (a:Int b:Int)
;     (cond
;       ((a > 5) (return a))
;       ((b > 5) (return b))
;       (default (return 0))))

; (func test (a b)
;     (switch key
;         (GL-KEY-ESCAPE (a + 5))
;         (GL-KEY-DOWN (a + 2))
;         (GL-KEY-UP (a + 1))
;         (default nil)))

; (+ 1 (* 2 3))
; (1 + (2 * 3))

; (1 * 2 + 3)
; ((1 * 2) + 3)

; (set add (x: Float y: Float -> cos x + sin y + precedence))

; (set add (x y -> (x + y)))
; (set add (-> (x y) (+ x y)))
; (set add (lambda (x y) (+ x y)))



; (func did-press-key (window:GLFW-Window, key:Int, scancode:Int, action:Int, mode:Int)
;     (printf "%d\n" key)

;     (if (action = GLFW-PRESS)
;         (switch key
;             (GLFW-KEY-ESCAPE
;                 (glfw-set-window-should-close window GL-TRUE))
;             (GLFW-KEY-DOWN
;                 (mix-ratio := (max 0 (mix-ratio - 0.1f))))
;             (GLFW-KEY-UP
;                 (mix-ratio := (min 1 (mix-ratio + 0.1f)))))))
